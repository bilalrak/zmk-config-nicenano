/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        mul {
            bindings = <&kp ASTERISK>;
            key-positions = <23 12>;
            timeout-ms = <1000>;
            layers = <0>;
        };

        aps {
            bindings = <&kp APOS>;
            key-positions = <22 12>;
            timeout-ms = <1000>;
            layers = <0>;
        };

        toggleLayer3 {
            bindings = <&tog 3>;
            key-positions = <13 25>;
            timeout-ms = <100>;
        };

        se_redo {
            bindings = <&kp LC(Y)>;
            key-positions = <24 12>;
            timeout-ms = <1000>;
            layers = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q @|  W  |  E  |  R  |  T  |   |  Z  |  U   |  I  |  O  |  P  | BKSP  |
            // | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  #' |  +* ~ |
            // | CTRL |  Y  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,; |  .: |  -_ | ESC   |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Z    &kp U  &kp I      &kp O    &kp P      &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp HASH   &kp PLUS
&kp LCTRL       &kp Y  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp MINUS  &kp ESC
                              &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |     | F1    |     |  /  | DEL |  ?  | BKSP |
            // | SHFT |  6  |  7  |  8  |  9  |  0  |     | BTCLR |     |     | HME | UP  | END  |
            // | CTRL |     |     |     |     |     |     | BT1   | BT2 | BT3 | LFT | DWN | RGT  |
            //                    | GUI |     | SPC |     | ENT   |     | ALT |

            bindings = <
&kp TAB  &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp F1                &kp HOME               &kp UP_ARROW      &kp END            &kp DELETE      &kp BSPC
&trans   &kp N6  &kp N7  &kp N8    &kp N9  &kp N0       &trans                &kp LEFT               &kp DOWN_ARROW    &kp RIGHT          &kp LEFT_BRACE  &kp RIGHT_BRACE
&trans   &trans  &trans  &trans    &trans  &kp EQUAL    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp COLON       &kp SEMICOLON
                         &kp LGUI  &trans  &kp SPACE    &kp RET               &trans                 &kp RALT
            >;
        };

        raise_layer {
            // ----------------------------------------------------------------------------------------- 
            // |  TAB |  !  |  "  |  #  |  $  |  %  |   |  &  |  ^  |  *  |  (  |  )  | BKSP |
            // | SHFT |  =  |  +  |  -  |  @  |     |   |     |     |  \  |  [  |  ]  |  ~   |
            // | CTRL |  <  |  >  |     |     |     |   |  _  |     | "|" |  {  |  }  |  `   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB  &kp EXCL     &kp DQT        &kp DOLLAR   &bt BT_SEL 2  &bt BT_SEL 1      &kp NON_US_BACKSLASH  &kp SLASH  &kp EQUAL  &kp QUESTION  &trans  &kp BSPC
&trans   &kp AT_SIGN  &kp AMPERSAND  &kp PIPE     &trans        &bt BT_SEL 0      &trans                &trans     &trans     &trans        &trans  &kp TILDE
&trans   &kp LT       &kp GT         &kp PERCENT  &trans        &bt BT_CLR_ALL    &trans                &trans     &trans     &trans        &trans  &kp GRAVE
                                     &kp LGUI     &trans        &kp SPACE         &kp RET               &trans     &kp RALT
            >;
        };

        solidedge_layer {
            bindings = <
&kp ESCAPE      &kp BACKSPACE  &kp F3     &kp N7        &kp N8        &kp N9          &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LC(H)      &kp LC(S)  &kp NUMBER_4  &kp N5        &kp NUMBER_6    &trans  &trans  &trans  &trans  &trans  &trans
&kp LC(Z)       &kp DEL        &kp LC(I)  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3    &trans  &trans  &trans  &trans  &trans  &trans
                                          &kp N0        &kp PERIOD    &kp ENTER       &trans  &trans  &trans
            >;
        };
    };
};
